// @ts-nocheck

import { Client } from 'amocrm-js'
import { pipeline } from 'stream';

const pipelines = {
	'OZON': 7000654,
	'WB': 7022614,
	'YA': 7260770,
	'ZY': 7260794,
}

const pipelinesReverse = {
	7000654: 'OZON',
	7022614: 'Wildberries',
	7260770: 'Yandex',
	7260794: '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ',
}

const statuses = {
	7000654: {
		// 58771906: '–ù–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–µ',
		68250842: 'üü£–ü—Ä–∏–Ω—è—Ç',
		59223350: 'üîµ–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
		58771914: 'üü°–°–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è',
		58929210: 'üü†–í –ø—É—Ç–∏',
		// 65557398: '–ù–µ –¥–æ–µ—Ö–∞–ª',
		59013162: 'üü¢–ü—Ä–∏–±—ã–ª –≤ –ü—É–Ω–∫—Ç',
		// 142: '–í—ã–¥–∞–Ω–æ',
		// 143: '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'
	},
	7022614: {
		// 58920302: '–ù–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–µ',
		65557390: 'üü£–ü—Ä–∏–Ω—è—Ç',
		59223322: 'üîµ–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
		58920306: 'üü°–°–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è',
		58920314: 'üü†–í –ø—É—Ç–∏',
		// 65557394: '–ù–µ –¥–æ–µ—Ö–∞–ª',
		59013154: 'üü¢–ü—Ä–∏–±—ã–ª –≤ –ü—É–Ω–∫—Ç',
		// 142: '–í—ã–¥–∞–Ω–æ',
		// 143: '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'
	},
	7260770: {
		// 60533134: '–ù–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–µ',
		68250882: 'üü£–ü—Ä–∏–Ω—è—Ç',
		60533138: 'üîµ–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
		60533142: 'üü°–°–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è',
		60533146: 'üü†–í –ø—É—Ç–∏',
		60533302: 'üü¢–ü—Ä–∏–±—ã–ª –≤ –ü—É–Ω–∫—Ç',
		// 142: '–í—ã–¥–∞–Ω–æ',
		// 143: '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'
	},
	7260794: {
		// 60533306: '–ù–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–µ',
		68250890: 'üü£–ü—Ä–∏–Ω—è—Ç',
		60533310: 'üîµ–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
		60533314: 'üü°–°–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è',
		60533318: 'üü†–í –ø—É—Ç–∏',
		64357918: 'üü¢–ü—Ä–∏–±—ã–ª –≤ –ü—É–Ω–∫—Ç',
		// 142: '–í—ã–¥–∞–Ω–æ',
		// 143: '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'
	}
}

const deliveryIds = {
	'–ú–µ–ª–∏—Ç–æ–ø–æ–ª—å': {
		'–§–µ–Ω–∏–∫—Å': '–§–µ–Ω–∏–∫—Å –≥.–ú–µ–ª–∏—Ç–æ–ø–æ–ª—å –ö–∏—Ä–æ–≤–∞ 50/1',
		'–†–∏–∂—Å–∫–∏–π': '–†–ò–ñ–°–ö–ò–ô –≥.–ú–µ–ª–∏—Ç–æ–ø–æ–ª—å 50 –ª –ü–æ–±–µ–¥—ã 29',
		'–ù–æ–≤—ã–π –ú–µ–ª–∏—Ç–æ–ø–æ–ª—å': '–ù–æ–≤—ã–π –ú–µ–ª–∏—Ç–æ–ø–æ–ª—å —É–ª –ì–∞–≥–∞—Ä–∏–Ω–∞ 3',
		'–ê–≤–æ—Å—å–∫–∞': '–ê–≤–æ—Å—å–∫–∞ –≥.–ú–µ–ª–∏—Ç–æ–ø–æ–ª—å',
		'–ß–µ—Ä–Ω—ã–π': '–ß–µ—Ä–Ω—ã–π –≥. –ú–µ–ª–∏—Ç–æ–ø–æ–ª—å –ë–æ–≥–¥–∞–Ω–∞ –•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 89',
		'–ü–∞—Ä–∫': '–ß–µ—Ä–Ω—ã–π –≥. –ú–µ–ª–∏—Ç–æ–ø–æ–ª—å –ë–æ–≥–¥–∞–Ω–∞ –•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 89',
	},
	'–ë–µ—Ä–¥—è–Ω—Å–∫': {
		'–ê–≤–æ–∫–∞–¥–æ': '–ê–í–û–ö–ê–î–û –≥. –ë–µ—Ä–¥—è–Ω—Å–∫ –ø—Ä –ü–æ–±–µ–¥—ã 11–ë',
		'–ö–∏—Ä–æ–≤—Å–∫–∏–π': '–ö–ò–†–û–í–°–ö–ò–ô –≥. –ë–µ—Ä–¥—è–Ω—Å–∫ —É–ª –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤ 49–ë',
		'–ñ–î': '–ñ–î –≥. –ë–µ—Ä–¥—è–Ω—Å–∫ –ø—Ä –í–æ—Å—Ç–æ—á–Ω—ã–π 119',
		'–ì–∞–π–¥–∞—Ä–∞': '–ì–∞–π–¥–∞—Ä–∞ –≥. –ë–µ—Ä–¥—è–Ω—Å–∫ –±—É–ª –®–µ–≤—á–µ–Ω–∫–æ 12–∞',
		'Fox': 'Fox –≥. –ë–µ—Ä–¥—è–Ω—Å–∫ —É–ª –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∞—è 16',
	},
	'–ü—Ä–∏–º–æ—Ä—Å–∫': {
		'–¶–µ–Ω—Ç—Ä': '–¶–µ–Ω—Ç—Ä –≥. –ü—Ä–∏–º–æ—Ä—Å–∫ —É–ª –î—Ä—É–∂–±—ã 15–ë',
	}
}

function formatDate(unix) {
	const dateObject = new Date(unix * 1000);
	const date =  dateObject.toLocaleString('en-GB', {
		day: '2-digit',
		month: '2-digit',
		year: '2-digit',
		// hour: '2-digit',
		// minute: '2-digit',
		hour12: false,
	})
	return date
}

function statusesSort(a, b) {
	const statusA = statuses[a.pipeline_id][a.status_id] || 'skip';
	const statusB = statuses[b.pipeline_id][b.status_id] || 'skip';

	const statusOrder = {
    'üü¢–ü—Ä–∏–±—ã–ª –≤ –ü—É–Ω–∫—Ç': 1,
    'üü†–í –ø—É—Ç–∏': 2,
    'üü°–°–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è': 3,
    'üîµ–í –æ–±—Ä–∞–±–æ—Ç–∫–µ': 4,
    'üü£–ü—Ä–∏–Ω—è—Ç': 5,
  };
	return statusOrder[statusA] - statusOrder[statusB] || statusA.localeCompare(statusB);
}

const client = new Client({
	domain: process.env.AMO_LOGIN!,
	auth: {
		bearer: process.env.AMO_TOKEN!
	},
});


export async function getContact(name, phone, telegram, id)  {
	let contact;
	if (id) contact = await client.contacts.getById(id);
	if (contact?.id) return contact;

	const newContact = new client.Contact;
	newContact.name = name;
	newContact.custom_fields_values = [
		{
			field_id: 1174897, //phone
			values: [{value: phone}]
		},
		{
			field_id: 1765729, //telegram
			values: [{value: telegram}]
		},
	];
	await newContact.save();
	return newContact;
}

export async function newLead(contact, telegram, shop, city, delivery, qrLink) {
	const lead = new client.Lead('123');
	lead.pipeline_id = pipelines[shop]
	// lead.status_id = pipelines[shop].statusId
	lead.custom_fields_values = [
		{
			field_id: 1770981, // qr
			values: [{value: qrLink}]
		},
		{
			field_id: 1376389,
			values: [{value: deliveryIds[city][delivery]}]
		},
		{
			field_id: 1770983,
			values: [{value: telegram}]
		}
	]

	lead.embeddedContacts.add([
		contact
	]);

	await lead.save();
	return lead
}

const colors = '‚ö™üî¥üü†üü°üü¢üîµüü£üü§‚ö´‚≠ïüîòüßø'
export async function getLeads(ids) {
	const response = await client.request.get('/api/v4/leads', {
		filter: {
			id: ids
		}
	})

	const leads = response.data._embedded?.leads.sort(statusesSort);
	let message = ``

	if (!leads?.length) {
		message = '‚ö™ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç';
		return message;
	}
	
	leads.forEach(lead => {
		if (!statuses[lead.pipeline_id][lead.status_id]) return;
		const date = formatDate(lead.created_at)
		const mesta = lead.custom_fields_values.find(obj => obj.field_name === '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç')?.values[0].value;
		const punkt = lead.custom_fields_values.find(obj => obj.field_name === '–í—ã–±—Ä–∞—Ç—å –ø—É–Ω–∫—Ç')?.values[0].value;
		const name = lead.name.replace('–°–¥–µ–ª–∫–∞ #', '–ó–∞–∫–∞–∑ ');
		message += `üì¶${name} –æ—Ç ${date}: ${pipelinesReverse[lead.pipeline_id]}, –°—Ç–∞—Ç—É—Å: ${statuses[lead.pipeline_id][lead.status_id]}\n\n`
		
		// message += `${name}, ${pipelinesReverse[lead.pipeline_id]}, –°—Ç–∞—Ç—É—Å: ${statuses[lead.pipeline_id][lead.status_id]}, –°—Ç–æ–∏–º–æ—Å—Ç—å: ${lead.price || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: ${mesta || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}, –ü—É–Ω–∫—Ç –ø–æ–ª—É—á–µ–Ω–∏—è: ${punkt} \n\n`
	});
	if (!message.length) message = '‚ö™ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç';
	return message

}



