import { InlineKeyboard, Keyboard } from 'grammy'
import { mainMenu } from './menus'
import { replyAndDel, deleteMsg, deleteMsgTime } from './functions'
import { newLead, getContact } from './amo'
import { deliveryPoints, cities } from './deliveryVars'


async function responseMenu(ctx: any, text: string) {
	try {
		await ctx.reply(text, {
			reply_markup: mainMenu
		})
	} catch (e) {}
}

function genFileName(store: string, length = 8) {
	const filename = Math.random().toString(36).substring(2, length + 2) + '_' + store;
  return filename.replace(/[^a-z0-9]/gi, '_') + '.jpg';
}

export async function addClientInfo(conversation: any, ctx: any) {
	try {
		await ctx.reply('üë® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à–µ –§–ò–û (–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á)', {
			reply_markup: new Keyboard()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å').resized()
										.oneTime()
		})
		ctx = await conversation.wait();
		if (ctx.msg?.text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å' || !ctx.msg?.text) return responseMenu(ctx, '‚ò∞ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		ctx.session.user.name = ctx.msg.text.substring(0, 50);

		await ctx.reply('üì± –£–∫–∞–∂–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79123456789 –∏–ª–∏ +380123456789', {
			reply_markup: new Keyboard()
										.requestContact('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä').row()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å').resized()
										.oneTime()
		});
		ctx = await conversation.wait();
		if (ctx.msg?.text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') return responseMenu(ctx, '‚ò∞ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		if (ctx.update.message?.contact?.phone_number) {
			ctx.session.user.phone = '+' + ctx.update.message?.contact?.phone_number.substring(0, 50);
		} else if (ctx.msg?.text) {
			if (ctx.msg.text.match(/^\+79\d{9}$/) || ctx.msg.text.match(/^\+380\d{9}$/)) {
				ctx.session.user.phone = ctx.msg.text.substring(0, 50);
			} else {
				ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79123456789 –∏–ª–∏ +380123456789')
				return ctx.conversation.enter('addClientInfo')
			}
		} else {
			ctx.reply('‚ùå –ù–æ–º–µ—Ä –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
			return ctx.conversation.enter('addClientInfo')
		}

		await ctx.reply('üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à –≥–æ—Ä–æ–¥', {
			reply_markup: cities
		});
		ctx = await conversation.wait();
		await ctx.answerCallbackQuery();
		const city = ctx.update.callback_query?.data;
		if (!city || city === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') return responseMenu(ctx, '‚ò∞ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		ctx.session.user.city = city.substring(0, 50);

		
		const selectedCity = deliveryPoints[city as keyof typeof deliveryPoints];
		await ctx.reply(`üìç –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—ã–ª–æ–∫:\n\n` + selectedCity.text, {
			reply_markup: selectedCity.keyboard
		});
		ctx = await conversation.wait();
		await ctx.answerCallbackQuery();
		const delivery = ctx.update.callback_query?.data;
		if (!delivery || delivery === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') return responseMenu(ctx, '‚ò∞ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		ctx.session.user.delivery = delivery.substring(0, 50);
		responseMenu(ctx, '‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
	} catch (e: any) {
		console.log(e.message)
	}
}

export async function QR(conversation: any, ctx: any) {
	try {
		ctx.reply('üèø –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç QR-–∫–æ–¥–∞ —Å –ø–æ–º—â—å—é <u>—Å–∫—Ä–µ–ø–∫–∏</u> –∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å!', {
			parse_mode: "HTML",
			reply_markup: new InlineKeyboard()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å')
		})
		ctx = await conversation.wait();
		const callback = ctx.update.callback_query
		if (callback?.data == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') {
			await ctx.answerCallbackQuery();
			await deleteMsg(ctx, callback?.from.id, callback?.message.message_id)
			return responseMenu(ctx, '‚ò∞ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		} 
		if (!ctx.msg?.photo) return responseMenu(ctx, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
		const photo = await ctx.api.getFile(ctx.msg?.photo[ctx.msg?.photo.length - 1]?.file_id);
		const fileName = genFileName(ctx.session.shop)
		await photo.download(`./public/a/${fileName}`)
		const qrLink = `admin.yes-pvz.ru:90/a/${fileName}`

		const { telegram, name, phone, city, delivery, amoId } = ctx.session.user
		if (!name || !phone || !telegram || !city || !delivery) {
			return responseMenu(ctx, '‚ùå QR-–∫–æ–¥ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ!')
		}
		const contact = await getContact(name, phone, telegram, amoId)

		ctx.session.user.amoId = contact?.id
		const lead = await newLead(contact, telegram, ctx.session.shop, city, delivery, qrLink)
		const leads = ctx.session.leads ? ctx.session.leads : []
		leads.push(lead.id)
		ctx.session.leads = leads;
		responseMenu(ctx, '‚úÖ QR-–∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É!')

	} catch (e: any) {
		console.log(e.message)
		responseMenu(ctx, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ QR-–∫–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!')
	}
}