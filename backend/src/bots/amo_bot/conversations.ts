import { InlineKeyboard, Keyboard } from 'grammy'
import { mainMenu } from './menus'
import { replyAndDel, deleteMsg, deleteMsgTime } from './functions'
import { newLead, getContact } from './amo'


function responseMenu(ctx: any, text: string) {
	ctx.reply(text, {
		reply_markup: mainMenu
	})
}

function genFileName(store: string, length = 8) {
	const filename = Math.random().toString(36).substring(2, length + 2) + '_' + store;
  return filename.replace(/[^a-z0-9]/gi, '_') + '.jpg';
}

const deliveryPoints = {
	'–ú–µ–ª–∏—Ç–æ–ø–æ–ª—å': {
		text: `
¬´–§–µ–Ω–∏–∫—Å¬ª ‚ñ∂Ô∏è —É–ª. –ö–∏—Ä–æ–≤–∞, 50/1, –¢–¶ –§–µ–Ω–∏–∫—Å\n\n
¬´–†–∏–∂—Å–∫–∏–π¬ª ‚ñ∂Ô∏è —É–ª. 50 –ª–µ—Ç –ü–æ–±–µ–¥—ã, –¥. 29\n\n
¬´–ù–æ–≤—ã–π –ú–µ–ª–∏—Ç–æ–ø–æ–ª—å¬ª ‚ñ∂Ô∏è —É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞ 3\n\n
¬´–ê–≤–æ—Å—å–∫–∞¬ª ‚ñ∂Ô∏è —É–ª. 30 –ª–µ—Ç –ü–æ–±–µ–¥—ã, –¥. 42–ê\n\n
¬´–ß–µ—Ä–Ω—ã–π¬ª ‚ñ∂Ô∏è –ø—Ä –ë. –•–º–µ–ª—å–Ω–∏—Ü–∫–æ–≥–æ 89\n\n
¬´–ü–∞—Ä–∫¬ª ‚ñ∂Ô∏è —É–ª. –ò–≤–∞–Ω–∞ –ê–ª–µ–∫—Å–µ–µ–≤–∞ 10–ê
		`,
		keyboard: () => new InlineKeyboard()
									.text('–§–µ–Ω–∏–∫—Å')
									.text('–†–∏–∂—Å–∫–∏–π').row()
									.text('–ù–æ–≤—ã–π –ú–µ–ª–∏—Ç–æ–ø–æ–ª—å')
									.text('–ê–≤–æ—Å—å–∫–∞').row()
									.text('–ß–µ—Ä–Ω—ã–π')
									.text('–ü–∞—Ä–∫')
	},
	'–ë–µ—Ä–¥—è–Ω—Å–∫': {
		text: `
¬´–ê–≤–æ–∫–∞–¥–æ¬ª ‚ñ∂Ô∏è –ø—Ä. –ü–æ–±–µ–¥—ã 11–ë\n\n
¬´–ö–∏—Ä–æ–≤—Å–∫–∏–π¬ª ‚ñ∂Ô∏è —É–ª. –í–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤ 49–ë\n\n
¬´–ñ–î¬ª ‚ñ∂Ô∏è –ø—Ä. –í–æ—Å—Ç–æ—á–Ω—ã–π 119\n\n
¬´–ì–∞–π–¥–∞—Ä–∞¬ª ‚ñ∂Ô∏è –±—É–ª—å–≤–∞—Ä –®–µ–≤—á–µ–Ω–∫–æ 12–ê\n\n
¬´Fox¬ª ‚ñ∂Ô∏è —É–ª. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∞—è 16\n\n
		`,
		keyboard: () => new InlineKeyboard()
									.text('–ê–≤–æ–∫–∞–¥–æ')
									.text('–ö–∏—Ä–æ–≤—Å–∫–∏–π').row()
									.text('–ñ–î')
									.text('–ì–∞–π–¥–∞—Ä–∞').row()
									.text('Fox')
	},
	'–ü—Ä–∏–º–æ—Ä—Å–∫': {
		text: `
¬´–¶–µ–Ω—Ç—Ä¬ª ‚ñ∂Ô∏è —É–ª. –î—Ä—É–∂–±—ã 15–ë
		`,
		keyboard: () => new InlineKeyboard()
									.text('–¶–µ–Ω—Ç—Ä')
	}
}

export async function addClientInfo(conversation: any, ctx: any) {
	try {
		await ctx.reply('üë® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à–µ –§–ò–û (–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á)', {
			reply_markup: new Keyboard()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å').resized()
										.oneTime()
		})
		ctx = await conversation.wait();
		if (ctx.msg.text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å' || !ctx.msg.text) return responseMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		ctx.session.user.name = ctx.msg.text;

		await ctx.reply('üì± –£–∫–∞–∂–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏–≤ —Ñ–æ—Ä–º–∞—Ç–µ +79123456789 –∏–ª–∏ +380123456789', {
			reply_markup: new Keyboard()
										.requestContact('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä').row()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å').resized()
										.oneTime()
		});
		ctx = await conversation.wait();
		if (ctx.msg.text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') return responseMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		if (ctx.update.message?.contact?.phone_number) {
			ctx.session.user.phone = '+' + ctx.update.message?.contact?.phone_number;
		} else if (ctx.msg.text) {
			if (ctx.msg.text.match(/^\+79\d{9}$/) || ctx.msg.text.match(/^\+380\d{9}$/)) {
				ctx.session.user.phone = ctx.msg.text;
			} else {
				ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79123456789 –∏–ª–∏ +380123456789')
				return ctx.conversation.enter('addClientInfo')
			}
		} else {
			ctx.reply('‚ùå –ù–æ–º–µ—Ä –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
			return ctx.conversation.enter('addClientInfo')
		}

		await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à –≥–æ—Ä–æ–¥', {
			reply_markup: new InlineKeyboard()
										.text('–ú–µ–ª–∏—Ç–æ–ø–æ–ª—å')
										.text('–ë–µ—Ä–¥—è–Ω—Å–∫')
										.text('–ü—Ä–∏–º–æ—Ä—Å–∫').row()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å')
		});
		ctx = await conversation.wait();
		const city = ctx.update.callback_query?.data;
		if (!city || city === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') return responseMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		ctx.session.user.city = city;

		const selectedCity = deliveryPoints[city as keyof typeof deliveryPoints];
		await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—ã–ª–æ–∫:\n\n` + selectedCity.text, {
			reply_markup: selectedCity.keyboard()
		});
		ctx = await conversation.wait();
		const delivery = ctx.update.callback_query?.data;
		if (!delivery || delivery === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') return responseMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		ctx.session.user.delivery = delivery;
		responseMenu(ctx, '‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
	} catch (e) {
		console.log(e)
	}
}

export async function QR(conversation: any, ctx: any) {
	try {
		const ask = ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç QR-–∫–æ–¥–∞ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç (—Å –∫–æ–º–ø—Ä–µ—Å—Å–∏–µ–π)\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://wb-pvz.ru', {
			reply_markup: new InlineKeyboard()
										.text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å')
		})
		ctx = await conversation.wait();
		if (ctx.update.callback_query?.data == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') {
			await deleteMsg(ctx, ask.chat.id, ask.message_id)
			return responseMenu(ctx, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
		} 
		if (!ctx.msg.photo) return responseMenu(ctx, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
		const photo = await ctx.api.getFile(ctx.msg.photo[ctx.msg.photo.length - 1].file_id);
		const fileName = genFileName(ctx.session.shop)
		await photo.download(`./public/a/${fileName}`)
		const qrLink = `admin.yes-pvz.ru:90/a/${fileName}`

		const { telegram, name, phone, city, delivery, amoId } = ctx.session.user
		if (!name || !phone || !telegram || !city || !delivery) {
			return responseMenu(ctx, '‚ùå QR-–∫–æ–¥ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ!')
		}
		const contact = await getContact(name, phone, telegram, amoId)
		ctx.session.user.amoId = contact?.id
		const lead = await newLead(contact, ctx.session.shop, city, delivery, qrLink)
		const leads = ctx.session.leads ? ctx.session.leads : []
		leads.push(lead.id)
		ctx.session.leads = leads;
		responseMenu(ctx, '‚úÖ QR-–∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É!')

	} catch (e) {
		console.log(e)
		responseMenu(ctx, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ QR-–∫–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!')
	}
}